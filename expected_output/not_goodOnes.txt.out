TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: STRCONST  LEXEME: "bad"
CONST -> STRCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: INTCONST  LEXEME: -20
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: T         LEXEME: t
CONST -> t
EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: NIL       LEXEME: nil
CONST -> nil
EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: LPAREN    LEXEME: (
TOKEN: GT        LEXEME: >
REL_OP -> >
BIN_OP -> REL_OP
TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 6
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR

---- Completed parsing ----

