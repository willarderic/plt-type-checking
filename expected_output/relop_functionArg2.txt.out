TOKEN: LPAREN    LEXEME: (
TOKEN: LE        LEXEME: <=
REL_OP -> <=
BIN_OP -> REL_OP
TOKEN: STRCONST  LEXEME: "two"
CONST -> STRCONST
EXPR -> CONST
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: RPAREN    LEXEME: )
TOKEN: INTCONST  LEXEME: 2
CONST -> INTCONST
EXPR -> CONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
Line 1: Arg 2 must be integer or string
