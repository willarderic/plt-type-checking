TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f0
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: RPAREN    LEXEME: )
TOKEN: INTCONST  LEXEME: 0
CONST -> INTCONST
EXPR -> CONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding f0 to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f0
EXPR -> IDENT
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR

---- Completed parsing ----

