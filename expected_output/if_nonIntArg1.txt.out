TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: x
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding x to symbol table
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: y
TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST
EXPR -> CONST
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding y to symbol table
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: z
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: IDENT     LEXEME: x
ID_LIST -> ID_LIST IDENT
___Adding x to symbol table
TOKEN: IDENT     LEXEME: y
ID_LIST -> ID_LIST IDENT
___Adding y to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST
EXPR -> CONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding z to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: IF        LEXEME: if
TOKEN: IDENT     LEXEME: z
EXPR -> IDENT
TOKEN: IDENT     LEXEME: x
EXPR -> IDENT
TOKEN: IDENT     LEXEME: y
EXPR -> IDENT
IF_EXPR -> if EXPR EXPR EXPR
Line 7: Arg 1 cannot be function
