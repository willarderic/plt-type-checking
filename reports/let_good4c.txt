TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR  LEXEME: let*					TOKEN: LETSTAR   LEXEME: let*

___Entering new scope... 					___Entering new scope...

TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon						ID_EXPR_LIST -> epsilon
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT  LEXEME: fn					TOKEN: IDENT     LEXEME: fn
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA  LEXEME: lambda					TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope... 					___Entering new scope...

TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon						ID_LIST -> epsilon
TOKEN: IDENT  LEXEME: x1					TOKEN: IDENT     LEXEME: x1
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x1 to symbol table					___Adding x1 to symbol table
TOKEN: IDENT  LEXEME: x2					TOKEN: IDENT     LEXEME: x2
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x2 to symbol table					___Adding x2 to symbol table
TOKEN: IDENT  LEXEME: x3					TOKEN: IDENT     LEXEME: x3
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x3 to symbol table					___Adding x3 to symbol table
TOKEN: IDENT  LEXEME: x4					TOKEN: IDENT     LEXEME: x4
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x4 to symbol table					___Adding x4 to symbol table
TOKEN: IDENT  LEXEME: x5					TOKEN: IDENT     LEXEME: x5
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x5 to symbol table					___Adding x5 to symbol table
TOKEN: IDENT  LEXEME: x6					TOKEN: IDENT     LEXEME: x6
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x6 to symbol table					___Adding x6 to symbol table
TOKEN: IDENT  LEXEME: x7					TOKEN: IDENT     LEXEME: x7
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x7 to symbol table					___Adding x7 to symbol table
TOKEN: IDENT  LEXEME: x8					TOKEN: IDENT     LEXEME: x8
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x8 to symbol table					___Adding x8 to symbol table
TOKEN: IDENT  LEXEME: x9					TOKEN: IDENT     LEXEME: x9
ID_LIST -> ID_LIST IDENT					ID_LIST -> ID_LIST IDENT
___Adding x9 to symbol table					___Adding x9 to symbol table
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: STRCONST  LEXEME: "nine"					TOKEN: STRCONST  LEXEME: "nine"
CONST -> STRCONST						CONST -> STRCONST
EXPR -> CONST							EXPR -> CONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR				LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...						___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR				PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding fn to symbol table					___Adding fn to symbol table
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT  LEXEME: fn					TOKEN: IDENT     LEXEME: fn
EXPR -> IDENT							EXPR -> IDENT
TOKEN: INTCONST  LEXEME: 1					TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 2					TOKEN: INTCONST  LEXEME: 2
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 3					TOKEN: INTCONST  LEXEME: 3
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 5					TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 6					TOKEN: INTCONST  LEXEME: 6
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 7					TOKEN: INTCONST  LEXEME: 7
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 8					TOKEN: INTCONST  LEXEME: 8
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 9					TOKEN: INTCONST  LEXEME: 9
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR						EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST					PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR						EXPR_LIST -> EXPR
PARENTHESIZED_EXPR -> EXPR_LIST					PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR				LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...						___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR					PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN  LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR							START -> EXPR

---- Completed parsing ----					---- Completed parsing ----

